[{"createdAt":"2025-08-27T15:01:23.530Z","updatedAt":"2025-10-27T20:38:25.000Z","id":"R5JJVzcAIig376UW","name":"data-quality-agent","active":false,"isArchived":false,"nodes":[{"parameters":{"promptType":"define","text":"={{ $json.text }}\n","hasOutputParser":true,"options":{"systemMessage":"=Actuás como un agente de validación y limpieza de textos de reseñas gastronómicas.\n\nTareas:\n1. Eliminá símbolos irrelevantes, HTML, emojis y espacios redundantes.\n2. Convertí el texto a minúsculas.\n3. Validá si tiene al menos 5 palabras con sentido (coherencia mínima).\n\nDevolvé exclusivamente un JSON válido, sin ninguna explicación.\n\nFormato ESTRICTO (sin comillas mal cerradas, sin texto extra):\n\n{\n  \"texto_limpio\": \"<texto limpio>\",\n  \"valido\": true/false,\n  \"log_limpieza\": [\"tarea 1\", \"tarea 2\", ...]\n}\n\nNotas:\n- Si el texto no es limpiable, devolvé `\"valido\": false` y `log_limpieza`: [\"sin comentarios\"]\n- ¡NO agregues texto fuera del JSON!\n- ¡NO uses markdown ni etiquetas!\n\nEntrada a procesar:\n{{ $json[\"text\"] }}\n"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.2,"position":[-96,-160],"id":"8dab8027-8ca4-4c17-8801-1eeb3ceeadcf","name":"AI Agent","onError":"continueRegularOutput"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[-128,64],"id":"5471d8a3-a3c2-4fd1-994d-23cb28f992c7","name":"Google Gemini Chat Model","credentials":{"googlePalmApi":{"id":"EFu1uEI3GTdSgDkH","name":"Google Gemini(PaLM) Api account"}}},{"parameters":{"content":"# Agente de Calidad de Datos\n### Ingesta, validación y limpieza.\n","height":112,"width":1414},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-1456,-352],"id":"af67c9c1-b822-467d-814a-61b7581e2739","name":"Sticky Note"},{"parameters":{"assignments":{"assignments":[{"id":"9b70f93c-2d86-4328-bd90-0888415283a6","name":"text","value":"={{ $json.datasets.map(item => item.text) }}","type":"array"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-560,-160],"id":"58a936dc-bcb1-41cb-9d4d-ef45ce11972e","name":"Transformar a lista de textos"},{"parameters":{"fieldToSplitOut":"text","options":{}},"type":"n8n-nodes-base.splitOut","typeVersion":1,"position":[-352,-160],"id":"87c930b7-33a3-4f94-bff5-d687830b2fc4","name":"Split Out"},{"parameters":{},"type":"n8n-nodes-base.manualTrigger","typeVersion":1,"position":[-1456,-160],"id":"ab0a7efa-b631-4411-b7bb-36d595c71c04","name":"When clicking ‘Execute workflow’"},{"parameters":{"mode":"runOnceForEachItem","jsCode":"// Obtenemos los datasets del input\nconst data = $json;\n\n// Convertimos el objeto con claves dinámicas en un array limpio\nconst cleaned = Object.values(data).map(entry => ({ text: entry.text }));\n\n// Retornamos el array limpio\nreturn {\n  datasets: cleaned\n};\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-784,-160],"id":"a92cf614-3869-4ce2-9477-7186db8a73ba","name":"Code"},{"parameters":{"jsonSchemaExample":"{\n  \"texto_limpio\": \"string\",\n  \"valido\": \"boolean\",\n  \"log_limpieza\": \"array\"\n}\n"},"type":"@n8n/n8n-nodes-langchain.outputParserStructured","typeVersion":1.3,"position":[80,64],"id":"07f2bfe8-b338-4284-96f8-56d9944b4a54","name":"Structured Output Parser","notesInFlow":false},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"04bbafa8-7aa4-4be3-8771-6e50cca934c8","leftValue":"={{ $json.output.valido }}","rightValue":"=true","operator":{"type":"string","operation":"equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[256,-160],"id":"da787939-e3e4-48a6-84fd-357e68450416","name":"If"},{"parameters":{"assignments":{"assignments":[{"id":"911028b7-1660-44f5-8c02-54c674bb3f3b","name":"texto_limpio","value":"={{ $json.output.texto_limpio }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[496,-368],"id":"5aefc590-dbaf-48f5-9bee-73d3ffc83b58","name":"Edit Fields"},{"parameters":{"options":{"fileName":"=textos_limpios_{{ $now.toFormat(\"yyyyLLdd_HHmmss\") }}.csv","headerRow":true}},"type":"n8n-nodes-base.convertToFile","typeVersion":1.1,"position":[704,-368],"id":"41466f16-13c2-4685-a741-6297d8521101","name":"Convert to File"},{"parameters":{"operation":"write","fileName":"=/home/node/files_curados/{{ $binary.data.fileName }}","options":{"append":true}},"type":"n8n-nodes-base.readWriteFile","typeVersion":1,"position":[912,-368],"id":"fe74722d-93d6-4783-a8f6-df70caeff5f8","name":"Read/Write Files from Disk1"},{"parameters":{"assignments":{"assignments":[{"id":"05ed1b2d-f819-4669-8aec-ff3cfc3ca77e","name":"texto_original","value":"={{ $json.output.texto_limpio }}","type":"string"},{"id":"12950c70-a085-430b-84e7-858e3b35558d","name":"error","value":"Texto inválido","type":"string"},{"id":"65efce67-ef23-428b-8fe0-3bc3082296c7","name":"fecha","value":"={{ $now.toISO() }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[496,16],"id":"ffc6b281-e0cb-4851-98a6-36428a535d23","name":"Edit Fields1"},{"parameters":{"options":{"fileName":"/files/log_errores.csv"}},"type":"n8n-nodes-base.convertToFile","typeVersion":1.1,"position":[704,16],"id":"af50a501-5277-4e10-96fa-5655a25e1b2f","name":"Convert to File1"},{"parameters":{"operation":"write","fileName":"/home/node/logs/log_errores.csv","options":{}},"type":"n8n-nodes-base.readWriteFile","typeVersion":1,"position":[928,16],"id":"f7ec7ebb-ca26-427f-8e81-dc9d2063aaff","name":"Read/Write Files from Disk"},{"parameters":{"assignments":{"assignments":[{"id":"04d255bc-f3da-4a79-b0ae-837f8d2050a4","name":"texto_limpio","value":"={{ $json.output.texto_limpio }}","type":"string"},{"id":"b3189e08-1a1d-4cde-b78a-f3844f23cf44","name":"log_limpieza","value":"={{ $json.output.log_limpieza }}","type":"array"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[496,-176],"id":"9d9b56f5-d0f1-4b14-a038-cba123646e92","name":"Guardado de Logs"},{"parameters":{"operation":"toJson","binaryPropertyName":"=data","options":{"fileName":"logs_limpieza.json"}},"type":"n8n-nodes-base.convertToFile","typeVersion":1.1,"position":[704,-176],"id":"30c3732c-d810-43ca-8168-50139465af6f","name":"Convert to File2"},{"parameters":{"operation":"write","fileName":"/home/node/logs/logs_limpieza.json","options":{"append":true}},"type":"n8n-nodes-base.readWriteFile","typeVersion":1,"position":[928,-176],"id":"ce503529-e78f-49c1-ad07-7b63a7cb5bb7","name":"Read/Write Files from Disk2"},{"parameters":{"url":"https://testproject-ab345-default-rtdb.firebaseio.com/datasets.json?orderBy=\"$key\"&limitToFirst=3","sendHeaders":true,"specifyHeaders":"json","jsonHeaders":"={\n  \"Authorization\": \"Bearer {{$node['Get Firebase Token'].json['access_token']}}\",\n  \"Content-Type\": \"application/json\"\n}\n","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[-1008,-160],"id":"ebf35c8f-03a2-45c7-8b81-b5cbb1cc7b61","name":"Query"},{"parameters":{"workflowId":{"__rl":true,"value":"ny6GWtM02P6ZW2hN","mode":"list","cachedResultName":"firebase-auth-agent"},"workflowInputs":{"mappingMode":"defineBelow","value":{},"matchingColumns":[],"schema":[],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[-1232,-160],"id":"6d09869f-5dd7-4dd4-b7c8-f93fa28b72ac","name":"Get Firebase Token"}],"connections":{"Google Gemini Chat Model":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"AI Agent":{"main":[[{"node":"If","type":"main","index":0}]]},"Transformar a lista de textos":{"main":[[{"node":"Split Out","type":"main","index":0}]]},"Split Out":{"main":[[{"node":"AI Agent","type":"main","index":0}]]},"When clicking ‘Execute workflow’":{"main":[[{"node":"Get Firebase Token","type":"main","index":0}]]},"Code":{"main":[[{"node":"Transformar a lista de textos","type":"main","index":0}]]},"Structured Output Parser":{"ai_outputParser":[[{"node":"AI Agent","type":"ai_outputParser","index":0}]]},"If":{"main":[[{"node":"Edit Fields","type":"main","index":0},{"node":"Guardado de Logs","type":"main","index":0}],[{"node":"Edit Fields1","type":"main","index":0}]]},"Edit Fields":{"main":[[{"node":"Convert to File","type":"main","index":0}]]},"Convert to File":{"main":[[{"node":"Read/Write Files from Disk1","type":"main","index":0}]]},"Read/Write Files from Disk1":{"main":[[]]},"Edit Fields1":{"main":[[{"node":"Convert to File1","type":"main","index":0}]]},"Convert to File1":{"main":[[{"node":"Read/Write Files from Disk","type":"main","index":0}]]},"Guardado de Logs":{"main":[[{"node":"Convert to File2","type":"main","index":0}]]},"Convert to File2":{"main":[[{"node":"Read/Write Files from Disk2","type":"main","index":0}]]},"Query":{"main":[[{"node":"Code","type":"main","index":0}]]},"Get Firebase Token":{"main":[[{"node":"Query","type":"main","index":0}]]}},"settings":{"executionOrder":"v1","saveExecutionProgress":true,"saveManualExecutions":true,"callerPolicy":"workflowsFromSameOwner"},"staticData":{"node:Schedule Trigger":{"recurrenceRules":[]}},"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"d52bf9ad-d45d-49e3-b5fa-653b9c4f591b","triggerCount":1,"tags":[],"shared":[{"createdAt":"2025-08-27T15:01:23.535Z","updatedAt":"2025-08-27T15:01:23.535Z","role":"workflow:owner","workflowId":"R5JJVzcAIig376UW","projectId":"7qi7LuhiXVa97DUN","project":{"createdAt":"2025-08-27T14:52:01.588Z","updatedAt":"2025-08-27T14:53:04.989Z","id":"7qi7LuhiXVa97DUN","name":"EZEQUIEL CORONEL <ezequielcoronel199@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-09-02T18:55:20.100Z","updatedAt":"2025-10-27T21:11:39.000Z","id":"vnk9JLkQxqZAYVHp","name":"inference-agent","active":false,"isArchived":false,"nodes":[{"parameters":{"fileSelector":"={{ $json.stdout }}","options":{"fileExtension":"csv"}},"type":"n8n-nodes-base.readWriteFile","typeVersion":1,"position":[-496,16],"id":"d1206214-fcc4-4f53-b445-55eecff12736","name":"Read/Write Files from Disk"},{"parameters":{"jsCode":"// Code node: \"Parse CSV → Items\"\n// Lee el binario \"data\" que dejó el nodo de lectura de disco y emite N items (uno por fila)\n\nconst buf = await this.helpers.getBinaryDataBuffer(0, 'data');\nlet text = buf.toString('utf8');\n\n// Limpia BOM y saltos\nif (text.charCodeAt(0) === 0xFEFF) text = text.slice(1);\ntext = text.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n');\n\n// Detecta delimitador: coma, punto y coma o tab\nfunction detectDelimiter(sample) {\n  const firstLine = sample.split('\\n')[0] || '';\n  const counts = {\n    ',': (firstLine.match(/,/g) || []).length,\n    ';': (firstLine.match(/;/g) || []).length,\n    '\\t': (firstLine.match(/\\t/g) || []).length,\n  };\n  return Object.entries(counts).sort((a,b) => b[1]-a[1])[0][0] || ',';\n}\nconst DELIM = detectDelimiter(text);\n\n// Parser CSV simple con comillas\nfunction parseCSV(t, delimiter) {\n  const rows = [];\n  let row = [];\n  let val = '';\n  let inQuotes = false;\n\n  for (let i = 0; i < t.length; i++) {\n    const c = t[i];\n\n    if (inQuotes) {\n      if (c === '\"') {\n        if (t[i + 1] === '\"') { val += '\"'; i++; }\n        else { inQuotes = false; }\n      } else {\n        val += c;\n      }\n    } else {\n      if (c === '\"') inQuotes = true;\n      else if (c === delimiter) { row.push(val); val = ''; }\n      else if (c === '\\n') { row.push(val); rows.push(row); row = []; val = ''; }\n      else { val += c; }\n    }\n  }\n  if (val.length > 0 || row.length > 0) { row.push(val); rows.push(row); }\n  return rows;\n}\n\nconst rows = parseCSV(text, DELIM);\nif (!rows.length) return [];\n\n// Primera fila = headers\nconst headers = rows.shift().map(h => String(h || '').trim());\n\n// Mapear filas a objetos JSON\nconst items = rows\n  .filter(r => r.some(x => String(x || '').trim() !== '')) // descarta filas vacías\n  .map(r => {\n    const obj = {};\n    headers.forEach((h, i) => { obj[h] = r[i] !== undefined ? r[i] : ''; });\n    return { json: obj };\n  });\n\nreturn items;\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-272,16],"id":"d4b91fd6-8310-4fb6-b7c0-4b2b18fcd60d","name":"Parse CSV → Items"},{"parameters":{"mode":"combine","combineBy":"combineByPosition","options":{}},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[176,176],"id":"5116869e-9083-4bcd-a3ec-115976eb854b","name":"Merge"},{"parameters":{"mode":"runOnceForEachItem","jsCode":"const result0 = $json[\"0\"];\nconst result1 = $json[\"1\"];\n\nlet bestResult = null;\n\n// Si existen ambos resultados, elegimos el de mayor score\nif (result0 && result1) {\n  bestResult = result0.score >= result1.score ? result0 : result1;\n} else {\n  // Si solo hay uno de los dos\n  bestResult = result0 || result1;\n}\n\n// Devolvemos un único objeto (no un array)\nreturn {\n  json: {\n    label: bestResult.label,\n    score: bestResult.score,\n    texto_limpio: $json.texto_limpio,\n    timestamp: new Date().toISOString()\n  }\n};\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[384,176],"id":"d11e8f15-60b1-48c8-b6e9-b335e3d6aac6","name":"Elige el score más alto"},{"parameters":{"workflowId":{"__rl":true,"value":"ny6GWtM02P6ZW2hN","mode":"list","cachedResultName":"firebase-auth-agent"},"workflowInputs":{"mappingMode":"defineBelow","value":{},"matchingColumns":[],"schema":[],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[-1232,16],"id":"bae09e2e-a77f-43fd-b99b-f8a59e7fe56f","name":"Get Firebase Token"},{"parameters":{"options":{"temperature":0}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[560,384],"id":"23527aa7-9b2b-43b6-a184-471f2c4bd54f","name":"Google Gemini Chat Model","credentials":{"googlePalmApi":{"id":"EFu1uEI3GTdSgDkH","name":"Google Gemini(PaLM) Api account"}}},{"parameters":{"schemaType":"manual","inputSchema":"{\n  \"type\": \"object\",\n  \"properties\": {\n    \"label\": { \"type\": \"string\" },\n    \"score\": { \"type\": \"number\" },\n    \"texto_limpio\": { \"type\": \"string\" },\n    \"analisis_ai\": { \"type\": \"string\" },\n    \"derivar_a\": { \"type\": \"string\" }\n  },\n  \"required\": [\"label\", \"score\", \"texto_limpio\", \"analisis_ai\", \"derivar_a\"]\n}\n"},"type":"@n8n/n8n-nodes-langchain.outputParserStructured","typeVersion":1.3,"position":[800,384],"id":"92d31781-8c58-44ac-b4a8-f4dd8794581c","name":"Structured Output Parser"},{"parameters":{"content":"# Agente de Inferencia\n### Recibe textos preprocesados, ejecuta el modelo de inferencia y guarda los resultados con analisis y derivación a Atención a usuarios o a Marketing\n","height":112,"width":1414},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-1440,-256],"id":"aedb46a3-64d6-4fa2-930d-961bc43ebc07","name":"Sticky Note"},{"parameters":{"method":"POST","url":"https://router.huggingface.co/hf-inference/models/siebert/sentiment-roberta-large-english","authentication":"predefinedCredentialType","nodeCredentialType":"huggingFaceApi","sendBody":true,"specifyBody":"json","jsonBody":"={\n  \"inputs\": \"={{ $json.texto_limpio }}\"\n}\n","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[-48,-96],"id":"b4442543-1f22-49f7-a84a-56921d505109","name":"Inferencia","credentials":{"huggingFaceApi":{"id":"bS3P2zunLWgbX0wO","name":"HuggingFaceApi account"}}},{"parameters":{"promptType":"define","text":"=Analizá el siguiente texto:\n\"{{$json[\"texto_limpio\"]}}\"\n\nResultados previos:\n- Sentimiento detectado: {{$json[\"label\"]}}\n- Nivel de confianza: {{$json[\"score\"]}}\n\nTarea:\nDevolvé un JSON con los siguientes campos:\n{\n  \"label\": \"{{$json[\"label\"]}}\",\n  \"score\": {{$json[\"score\"]}},\n  \"texto_limpio\": \"{{$json[\"texto_limpio\"]}}\",\n  \"analisis_ai\": \"string\",\n  \"derivar_a\": \"string\"\n}\n\nReglas:\n- En \"analisis_ai\", escribí un breve análisis del sentimiento (máx. 2 oraciones).\n- Si label = \"POSITIVE\" → derivar_a = \"Marketing\"\n- En cualquier otro caso → derivar_a = \"Atención a Usuarios\"\n- La salida debe ser SOLO un objeto JSON válido.\n","hasOutputParser":true,"options":{"systemMessage":"Sos un analista de sentimientos que trabaja con datos estructurados.\n\nReglas estrictas:\n- Procesá EXCLUSIVAMENTE los objetos que te lleguen en la entrada JSON.\n- NO inventes, traduzcas ni reescribas los textos.\n- Debés conservar \"label\", \"score\" y \"texto_limpio\" exactamente como vienen.\n- Solo agregá los campos \"analisis_ai\" y \"derivar_a\".\n- No generes nuevos objetos ni cambies la cantidad de elementos.\n- Respondé únicamente con un arreglo JSON (una lista []) que contenga un objeto por cada elemento recibido.\n- No agregues ningún texto fuera del JSON (ni explicaciones ni comentarios).\n"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.2,"position":[608,176],"id":"f4dc0d2d-7d47-40a8-819a-70b8f570ed6d","name":"Procesar inferencia y derivar"},{"parameters":{"method":"POST","url":"https://testproject-ab345-default-rtdb.firebaseio.com/resultados.json","sendHeaders":true,"specifyHeaders":"json","jsonHeaders":"={\n  \"Authorization\": \"Bearer {{$item(0).$node['Get Firebase Token'].json['access_token']}}\",\n  \"Content-Type\": \"application/json\"\n}\n","sendBody":true,"specifyBody":"json","jsonBody":"={\n  \"label\": \"{{$json.output.label}}\",\n  \"score\": \"{{$json.output.score}}\",\n  \"texto_limpio\": \"{{$json.output.texto_limpio}}\",\n  \"analisis_ai\": \"{{$json.output.analisis_ai}}\",\n  \"derivar_a\": \"{{$json.output.derivar_a}}\",\n  \"timestamp\": \"{{$now}}\"\n}\n","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[976,176],"id":"b6490038-8523-430f-81fa-8496c35cbd11","name":"Guardar inferencia y desición","executeOnce":false},{"parameters":{},"type":"n8n-nodes-base.manualTrigger","typeVersion":1,"position":[-1472,16],"id":"9dbf0cc4-33aa-426a-ad6b-cd1b50485169","name":"When clicking ‘Execute workflow’"},{"parameters":{"command":"ls -t /home/node/files_curados/*.csv | head -n 1\n"},"type":"n8n-nodes-base.executeCommand","typeVersion":1,"position":[-848,16],"id":"b162cda6-6d08-459d-875a-97358099a80d","name":"Execute Command"}],"connections":{"Read/Write Files from Disk":{"main":[[{"node":"Parse CSV → Items","type":"main","index":0}]]},"Parse CSV → Items":{"main":[[{"node":"Inferencia","type":"main","index":0},{"node":"Merge","type":"main","index":1}]]},"Merge":{"main":[[{"node":"Elige el score más alto","type":"main","index":0}]]},"Elige el score más alto":{"main":[[{"node":"Procesar inferencia y derivar","type":"main","index":0}]]},"Get Firebase Token":{"main":[[{"node":"Execute Command","type":"main","index":0}]]},"Google Gemini Chat Model":{"ai_languageModel":[[{"node":"Procesar inferencia y derivar","type":"ai_languageModel","index":0}]]},"Structured Output Parser":{"ai_outputParser":[[{"node":"Procesar inferencia y derivar","type":"ai_outputParser","index":0}]]},"Inferencia":{"main":[[{"node":"Merge","type":"main","index":0}]]},"Procesar inferencia y derivar":{"main":[[{"node":"Guardar inferencia y desición","type":"main","index":0}]]},"When clicking ‘Execute workflow’":{"main":[[{"node":"Get Firebase Token","type":"main","index":0}]]},"Execute Command":{"main":[[{"node":"Read/Write Files from Disk","type":"main","index":0}]]}},"settings":{"executionOrder":"v1","saveDataErrorExecution":"all","saveDataSuccessExecution":"all","saveExecutionProgress":true,"saveManualExecutions":true,"callerPolicy":"workflowsFromSameOwner"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"dfc9aa36-d14a-498d-8def-85f5ed05b070","triggerCount":1,"tags":[],"shared":[{"createdAt":"2025-09-02T18:55:20.103Z","updatedAt":"2025-09-02T18:55:20.103Z","role":"workflow:owner","workflowId":"vnk9JLkQxqZAYVHp","projectId":"7qi7LuhiXVa97DUN","project":{"createdAt":"2025-08-27T14:52:01.588Z","updatedAt":"2025-08-27T14:53:04.989Z","id":"7qi7LuhiXVa97DUN","name":"EZEQUIEL CORONEL <ezequielcoronel199@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-10-13T00:00:57.195Z","updatedAt":"2025-10-13T00:15:40.000Z","id":"ny6GWtM02P6ZW2hN","name":"firebase-auth-agent","active":false,"isArchived":false,"nodes":[{"parameters":{},"type":"n8n-nodes-base.manualTrigger","typeVersion":1,"position":[-400,-16],"id":"716a3995-6b01-4c7f-90e2-7dbd020040df","name":"When clicking ‘Execute workflow’"},{"parameters":{"command":"node -e \"const fs=require('fs');const jwt=require('jsonwebtoken');const axios=require('axios');(async()=>{const key=JSON.parse(fs.readFileSync('/home/node/credentials/testproject-firebase-cred.json','utf8'));const now=Math.floor(Date.now()/1000);const payload={iss:key.client_email,scope:'https://www.googleapis.com/auth/firebase.database https://www.googleapis.com/auth/userinfo.email',aud:'https://oauth2.googleapis.com/token',iat:now,exp:now+3600};const token=jwt.sign(payload,key.private_key,{algorithm:'RS256'});const params=new URLSearchParams();params.append('grant_type','urn:ietf:params:oauth:grant-type:jwt-bearer');params.append('assertion',token);const res=await axios.post('https://oauth2.googleapis.com/token',params);console.log(res.data.access_token);})();\"\n"},"type":"n8n-nodes-base.executeCommand","typeVersion":1,"position":[-176,-16],"id":"bba65e08-9231-4332-bf4d-b9faad0a8bd4","name":"Execute Command","alwaysOutputData":true},{"parameters":{"jsCode":"return [\n  {\n    json: {\n      access_token: $json[\"stdout\"].trim(),\n      created_at: new Date().toISOString()\n    }\n  }\n];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[32,-16],"id":"419b6011-9663-4561-9d24-c836bed9f9df","name":"Parse Firebase Token"}],"connections":{"When clicking ‘Execute workflow’":{"main":[[{"node":"Execute Command","type":"main","index":0}]]},"Execute Command":{"main":[[{"node":"Parse Firebase Token","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":"57f2e52d-07d6-4e39-b5b3-f4c3e2c7c76e","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-10-13T00:00:57.200Z","updatedAt":"2025-10-13T00:00:57.200Z","role":"workflow:owner","workflowId":"ny6GWtM02P6ZW2hN","projectId":"7qi7LuhiXVa97DUN","project":{"createdAt":"2025-08-27T14:52:01.588Z","updatedAt":"2025-08-27T14:53:04.989Z","id":"7qi7LuhiXVa97DUN","name":"EZEQUIEL CORONEL <ezequielcoronel199@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-10-13T03:13:50.848Z","updatedAt":"2025-10-30T13:29:36.000Z","id":"5ZA21hxDZbN0Tvbv","name":"workflow-principal-moc","active":true,"isArchived":false,"nodes":[{"parameters":{"assignments":{"assignments":[{"id":"ed4d204a-1986-43ab-97c3-715c69da9624","name":"modo","value":"actualizacion","type":"string"},{"id":"25a88e13-2338-4660-aa79-82219c8f6c87","name":"source","value":"main-workflow","type":"string"},{"id":"ee3e3bf1-67b8-477e-90dc-961d5a9c48c3","name":"timestamp","value":"={{$now}}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-336,-96],"id":"14ff48e5-dc87-48f9-aa4a-7961d16a2a06","name":"Configurar Modo"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"330ad889-714a-448e-ba33-f9c94dd02692","leftValue":"={{ $json.modo }}","rightValue":"ejecución","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[48,-96],"id":"7a8e24af-1059-4639-b5db-257f0e4f8555","name":"¿modo ejecucion?"},{"parameters":{"content":"## Configurar Modo\n### Debe detallar el modo \"actualización\" o \"ejecución\" dentro de la configuración del nodo. (Importante: considerar el uso del tilde)","height":336,"width":416},"type":"n8n-nodes-base.stickyNote","position":[-496,-240],"typeVersion":1,"id":"35b65038-4700-47af-b124-e8f03503fa6b","name":"Sticky Note"},{"parameters":{},"type":"n8n-nodes-base.manualTrigger","typeVersion":1,"position":[-736,-288],"id":"9520ba7c-89bf-4af0-a57d-89588b52ecc3","name":"Inicio MOC"},{"parameters":{"workflowId":{"__rl":true,"value":"R5JJVzcAIig376UW","mode":"list","cachedResultName":"data-quality-agent"},"workflowInputs":{"mappingMode":"defineBelow","value":{},"matchingColumns":[],"schema":[],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{"waitForSubWorkflow":true}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[416,-272],"id":"9170f619-ff89-45d5-b3b9-035994971ba6","name":"Preprocesamiento","notesInFlow":false},{"parameters":{"workflowId":{"__rl":true,"value":"vnk9JLkQxqZAYVHp","mode":"list","cachedResultName":"inference-agent"},"workflowInputs":{"mappingMode":"defineBelow","value":{},"matchingColumns":[],"schema":[],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[640,-272],"id":"ec6a0ab3-63c1-4a15-a2a3-f539d900c085","name":"Inferencia"},{"parameters":{"workflowId":{"__rl":true,"value":"BcNqU1uqUwsrJTuO","mode":"list","cachedResultName":"reporter-agent"},"workflowInputs":{"mappingMode":"defineBelow","value":{},"matchingColumns":[],"schema":[],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[864,-272],"id":"ec772a34-f123-4d2a-b1da-b7814568044b","name":"Reporte de resultados"},{"parameters":{"workflowId":{"__rl":true,"value":"PIHgOJZyhJWu7CWX","mode":"list","cachedResultName":"docs-and-versioner-agent"},"workflowInputs":{"mappingMode":"defineBelow","value":{},"matchingColumns":[],"schema":[],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{"waitForSubWorkflow":true}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[864,96],"id":"717890eb-9e3a-4b11-a940-949577f89596","name":"Documentación y versionado"},{"parameters":{"content":"\n\n**Se utilizan registros de prueba**","height":256,"width":256},"type":"n8n-nodes-base.stickyNote","position":[336,16],"typeVersion":1,"id":"480751ff-9178-4a85-af4a-e0ff4965feca","name":"Sticky Note1"},{"parameters":{"workflowId":{"__rl":true,"value":"R5JJVzcAIig376UW","mode":"list","cachedResultName":"data-quality-agent"},"workflowInputs":{"mappingMode":"defineBelow","value":{},"matchingColumns":[],"schema":[],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{"waitForSubWorkflow":true}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[416,96],"id":"ce9d9e42-9101-4f08-b590-cf48601758a5","name":"Update Preprocesamiento","notesInFlow":false},{"parameters":{"workflowId":{"__rl":true,"value":"vnk9JLkQxqZAYVHp","mode":"list","cachedResultName":"inference-agent"},"workflowInputs":{"mappingMode":"defineBelow","value":{},"matchingColumns":[],"schema":[],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{"waitForSubWorkflow":true}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[640,96],"id":"e550c05f-651a-4b9b-9bb8-458ff024e1fa","name":"Update Inferencia"},{"parameters":{"content":"# Sistema autónomo multiagente (SMA) en MLOps\n### Arquitectura avanzada que combina la gestión del ciclo de vida del aprendizaje automático (MLOps) con la colaboración de múltiples agentes AI autónomos.","height":96,"width":1808,"color":3},"type":"n8n-nodes-base.stickyNote","position":[-720,-416],"typeVersion":1,"id":"0c043627-00fa-4ccc-a62b-64e2d0b28dc5","name":"Sticky Note3"},{"parameters":{"content":"## Pendiente\n- crear base de datos de ejecuciones en firebase\n(tiene que contener id_ejecucion, fecha y hora de ejec, status de cada paso del flujo y append de logs individuales)\n- crear base q guarde id_ejecucion, cantidad de reseñas analizadas, porcentaje de positivas, porcentaje de negativas, porcentaje de error\n- crear documento de reporte de ejecucion que contenga los dos de ambas tablas para la ejecicion dada y una conclusion para el negocio que solicito el analisis\n- enviar documento via mail","height":448},"type":"n8n-nodes-base.stickyNote","position":[1056,-432],"typeVersion":1,"id":"9d3005d8-e8aa-44df-b6c7-191b6fe9b01c","name":"Sticky Note2"},{"parameters":{"rule":{"interval":[{"field":"cronExpression","expression":"00 17 10 * * *"}]}},"type":"n8n-nodes-base.scheduleTrigger","typeVersion":1.2,"position":[-736,112],"id":"5fc78271-4417-42a4-a088-f4e5b8f0d2e0","name":"Schedule Trigger"},{"parameters":{"jsCode":"const fs = require('fs');\nconst path = '/home/node/workflow_logs';\nfs.mkdirSync(path, { recursive: true });\n\n// Construir resumen del log\nconst summary = {\n  workflow_name: $workflow.name,\n  execution_id: $execution.id,\n  start_time: $execution.startTime,\n  end_time: new Date().toISOString(),\n  run_time_seconds: (new Date() - new Date($execution.startTime)) / 1000,\n  status: $execution.status || 'Success',\n  nodes_executed: $runData ? Object.keys($runData) : [],\n  input_summary: $json, // opcional: datos de entrada finales\n};\n\n// Guardar archivo JSON\nconst fileName = `${path}/${$workflow.name}_${$execution.id}.json`;\nfs.writeFileSync(fileName, JSON.stringify(summary, null, 2));\n\nreturn summary;\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1072,96],"id":"eb9da57e-64ef-4f6e-afac-ac2ac48374c3","name":"Code"}],"connections":{"Configurar Modo":{"main":[[{"node":"¿modo ejecucion?","type":"main","index":0}]]},"¿modo ejecucion?":{"main":[[{"node":"Preprocesamiento","type":"main","index":0}],[{"node":"Update Preprocesamiento","type":"main","index":0}]]},"Inicio MOC":{"main":[[{"node":"Configurar Modo","type":"main","index":0}]]},"Preprocesamiento":{"main":[[{"node":"Inferencia","type":"main","index":0}]]},"Inferencia":{"main":[[{"node":"Reporte de resultados","type":"main","index":0}]]},"Update Preprocesamiento":{"main":[[{"node":"Update Inferencia","type":"main","index":0}]]},"Update Inferencia":{"main":[[{"node":"Documentación y versionado","type":"main","index":0}]]},"Schedule Trigger":{"main":[[{"node":"Configurar Modo","type":"main","index":0}]]},"Documentación y versionado":{"main":[[{"node":"Code","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":{"node:Schedule Trigger":{"recurrenceRules":[]}},"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"f9132cf8-c176-413c-a3ab-81e5a504cc5f","triggerCount":1,"tags":[],"shared":[{"createdAt":"2025-10-13T03:13:50.853Z","updatedAt":"2025-10-13T03:13:50.853Z","role":"workflow:owner","workflowId":"5ZA21hxDZbN0Tvbv","projectId":"7qi7LuhiXVa97DUN","project":{"createdAt":"2025-08-27T14:52:01.588Z","updatedAt":"2025-08-27T14:53:04.989Z","id":"7qi7LuhiXVa97DUN","name":"EZEQUIEL CORONEL <ezequielcoronel199@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-10-13T03:24:21.439Z","updatedAt":"2025-10-27T22:06:21.000Z","id":"mAANIBD6TKBCSZfe","name":"pipeline-actualizacion","active":false,"isArchived":true,"nodes":[{"parameters":{"inputSource":"passthrough"},"type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1.1,"position":[-592,48],"id":"f14cb78c-b804-400f-ba4d-b70f06afffe6","name":"Inicio modo Actualización"},{"parameters":{"workflowId":{"__rl":true,"value":"R5JJVzcAIig376UW","mode":"list","cachedResultName":"data-quality-agent"},"workflowInputs":{"mappingMode":"defineBelow","value":{},"matchingColumns":[],"schema":[],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{"waitForSubWorkflow":true}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[-336,48],"id":"a53d0095-0a18-4d19-8d10-487f28e80f89","name":"Preprocesamiento","notesInFlow":false},{"parameters":{"workflowId":{"__rl":true,"value":"vnk9JLkQxqZAYVHp","mode":"list","cachedResultName":"inference-agent"},"workflowInputs":{"mappingMode":"defineBelow","value":{},"matchingColumns":[],"schema":[],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{"waitForSubWorkflow":true}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[-80,48],"id":"a84f9461-e269-4730-841c-9419199679af","name":"Inferencia"},{"parameters":{"content":"\n\n**Se utilizan registros de prueba**","height":256,"width":256},"type":"n8n-nodes-base.stickyNote","position":[-416,-32],"typeVersion":1,"id":"d0567637-b3af-4f46-9691-c1e1f24289f8","name":"Sticky Note"},{"parameters":{"workflowId":{"__rl":true,"value":"PIHgOJZyhJWu7CWX","mode":"list","cachedResultName":"docs-and-versioner-agent"},"workflowInputs":{"mappingMode":"defineBelow","value":{},"matchingColumns":[],"schema":[],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{"waitForSubWorkflow":true}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[144,48],"id":"18cd92a7-fec4-46ae-a33b-b6a179137948","name":"Documentación y versionado"}],"connections":{"Inicio modo Actualización":{"main":[[{"node":"Preprocesamiento","type":"main","index":0}]]},"Preprocesamiento":{"main":[[{"node":"Inferencia","type":"main","index":0}]]},"Inferencia":{"main":[[{"node":"Documentación y versionado","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":"e4f8f9d1-4c4d-4750-9a33-128bf0d80b1f","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-10-13T03:24:21.441Z","updatedAt":"2025-10-13T03:24:21.441Z","role":"workflow:owner","workflowId":"mAANIBD6TKBCSZfe","projectId":"7qi7LuhiXVa97DUN","project":{"createdAt":"2025-08-27T14:52:01.588Z","updatedAt":"2025-08-27T14:53:04.989Z","id":"7qi7LuhiXVa97DUN","name":"EZEQUIEL CORONEL <ezequielcoronel199@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-10-13T03:25:00.545Z","updatedAt":"2025-10-27T22:06:29.000Z","id":"mnXSTuVFRpByJBxs","name":"pipeline-ejecucion","active":false,"isArchived":true,"nodes":[{"parameters":{"inputSource":"passthrough"},"type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1.1,"position":[-736,-48],"id":"3d3ab315-c92e-4fb5-ba89-3830988f662e","name":"Inicio modo Ejecución"},{"parameters":{"workflowId":{"__rl":true,"value":"R5JJVzcAIig376UW","mode":"list","cachedResultName":"data-quality-agent"},"workflowInputs":{"mappingMode":"defineBelow","value":{},"matchingColumns":[],"schema":[],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{"waitForSubWorkflow":true}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[-512,-48],"id":"3d283a53-4d21-448e-92b8-e189a107823d","name":"Preprocesamiento","notesInFlow":false},{"parameters":{"workflowId":{"__rl":true,"value":"vnk9JLkQxqZAYVHp","mode":"list","cachedResultName":"inference-agent"},"workflowInputs":{"mappingMode":"defineBelow","value":{},"matchingColumns":[],"schema":[],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[-288,-48],"id":"9a84cf04-88a0-42bd-a37c-c126d289b547","name":"Inferencia"},{"parameters":{"workflowId":{"__rl":true,"value":"BcNqU1uqUwsrJTuO","mode":"list","cachedResultName":"reporter-agent"},"workflowInputs":{"mappingMode":"defineBelow","value":{},"matchingColumns":[],"schema":[],"attemptToConvertTypes":false,"convertFieldsToString":true},"options":{}},"type":"n8n-nodes-base.executeWorkflow","typeVersion":1.2,"position":[-64,-48],"id":"87686c25-42c2-42a2-bfce-02c039fc5f6d","name":"Reporte de resultados"}],"connections":{"Inicio modo Ejecución":{"main":[[{"node":"Preprocesamiento","type":"main","index":0}]]},"Preprocesamiento":{"main":[[{"node":"Inferencia","type":"main","index":0}]]},"Inferencia":{"main":[[{"node":"Reporte de resultados","type":"main","index":0}]]}},"settings":{"executionOrder":"v1","saveExecutionProgress":true,"callerPolicy":"workflowsFromSameOwner"},"staticData":null,"meta":null,"pinData":{},"versionId":"870c1c6a-bae0-4e0e-9ab8-011d330f31b1","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-10-13T03:25:00.547Z","updatedAt":"2025-10-13T03:25:00.547Z","role":"workflow:owner","workflowId":"mnXSTuVFRpByJBxs","projectId":"7qi7LuhiXVa97DUN","project":{"createdAt":"2025-08-27T14:52:01.588Z","updatedAt":"2025-08-27T14:53:04.989Z","id":"7qi7LuhiXVa97DUN","name":"EZEQUIEL CORONEL <ezequielcoronel199@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-10-13T04:28:39.587Z","updatedAt":"2025-10-27T20:13:36.000Z","id":"PIHgOJZyhJWu7CWX","name":"docs-and-versioner-agent","active":false,"isArchived":false,"nodes":[{"parameters":{},"type":"n8n-nodes-base.manualTrigger","typeVersion":1,"position":[-480,-32],"id":"8d828934-6e61-4adc-8242-d640ed9f72c0","name":"When clicking ‘Execute workflow’"},{"parameters":{"command":"n8n export:workflow --all --output=/home/node/workflows_backup.json\n"},"type":"n8n-nodes-base.executeCommand","typeVersion":1,"position":[-272,-32],"id":"5a7117bf-cb91-46e5-8e43-3513e99010e2","name":"Exportar Workflows"},{"parameters":{"fileSelector":"/home/node/workflows_backup.json","options":{}},"type":"n8n-nodes-base.readWriteFile","typeVersion":1,"position":[-64,-32],"id":"b02fdca6-9659-4631-a6c5-fd18eefe6e43","name":"Read/Write Files from Disk","alwaysOutputData":true},{"parameters":{"jsCode":"// Obtener el contenido del archivo leído\nlet raw = items[0].json.data;\n\n// Si viene codificado o binario, convertirlo a string\nif (typeof raw !== 'string') {\n  raw = JSON.stringify(raw);\n}\n\n// Intentar parsear el contenido del backup\nlet parsed;\ntry {\n  parsed = JSON.parse(raw);\n} catch (e) {\n  throw new Error(\"No se pudo parsear el JSON del backup: \" + e.message);\n}\n\n// Detectar si los workflows están dentro de un campo o en la raíz\nlet workflows = Array.isArray(parsed)\n  ? parsed\n  : parsed.workflows || parsed.data || [];\n\n// Validar que haya workflows\nif (!Array.isArray(workflows) || workflows.length === 0) {\n  throw new Error(\"No se encontraron workflows válidos en el backup.\");\n}\n\n// Crear resumen\nreturn workflows.map(wf => ({\n  nombre: wf.name || \"(sin nombre)\",\n  id: wf.id || \"(sin id)\",\n  descripcion: `${wf.nodes?.length || 0} nodos`,\n  tipos_nodos: wf.nodes?.map(n => n.type).join(\", \") || \"sin nodos\",\n  conexiones: Object.keys(wf.connections || {}).length + \" conexiones\"\n}));\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[384,-32],"id":"71d3faf4-a4b8-48b6-bb31-e55f5a6011f1","name":"Resumir Workflows"},{"parameters":{"options":{"temperature":0}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[640,176],"id":"6f3c2c31-af30-47cc-b420-292c280cfb05","name":"Google Gemini Chat Model","credentials":{"googlePalmApi":{"id":"EFu1uEI3GTdSgDkH","name":"Google Gemini(PaLM) Api account"}}},{"parameters":{"operation":"fromJson","options":{}},"type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[144,-32],"id":"013deac2-0b9e-4bf7-9168-0137b3008b2f","name":"Extract from File"},{"parameters":{"jsCode":"// Combina todos los outputs del AI Agent en un solo texto Markdown\n\nlet combined = \"# Documentación Consolidada de Workflows n8n\\n\\n\";\n\nfor (const item of items) {\n  if (item.json.output) {\n    combined += item.json.output.trim() + \"\\n\\n---\\n\\n\";\n  }\n}\n\nreturn [{ json: { documentation: combined } }];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[992,-32],"id":"a94fb9a7-1c4c-4d6f-83be-46978db53eff","name":"Code"},{"parameters":{"promptType":"define","text":"={{$json.documentation}}\n","options":{"systemMessage":"Actuás como un corrector técnico y de formato Markdown.\nRecibís documentación técnica de workflows n8n.\nDebés:\n\nMejorar ortografía y gramática.\n\nAgrega emojis para hacer la documentacion mas agradable visualmente.\n\nAsegurar que los títulos usan #, ##, ### correctamente.\n\nNo cambiar el contenido técnico.\n\nNo agregar explicaciones extras.\n\nDevolveme solo el Markdown corregido."}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.2,"position":[1216,-32],"id":"831a39ee-5b26-4b4c-adaf-2945d273ed33","name":"Corregir Markdown"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[1216,176],"id":"2a906376-2536-402f-b0af-42db3afac969","name":"Google Gemini Chat Model1","credentials":{"googlePalmApi":{"id":"EFu1uEI3GTdSgDkH","name":"Google Gemini(PaLM) Api account"}}},{"parameters":{"promptType":"define","text":"=A continuación se te provee un arreglo JSON con información de varios workflows exportados desde n8n:\n\n{{ $json }}\n\nCon esta información, generá un único documento en formato **Markdown (.md)** que contenga la documentación de todos los workflows.  \nCada workflow debe incluir las siguientes secciones:\n\n## {{ $json.nombre }}\n**ID:** {{ $json.id }}\n\n### Descripción general\nBasate en el campo {{ $json.descripcion }} para resumir cuántos nodos y conexiones tiene el flujo.\n\n### Propósito y contexto\nDescribí cuál podría ser su función dentro de un sistema automatizado.\n\n### Descripción técnica\nUsá los campos {{ $json.tipos_nodos }} y {{ $json.conexiones }} para explicar cómo está estructurado el flujo, qué tipo de nodos emplea (por ejemplo, `code`, `httpRequest`, `executeWorkflow`) y cómo se interrelacionan.\n\n### Recomendaciones\nIncluí sugerencias de mantenimiento y buenas prácticas específicas para este tipo de workflow (versionado, nomenclatura, logging, modularización).\n\n---\n\n⚠️ **Formato de salida obligatorio:**\n- Devolvé solo texto plano en formato Markdown.\n- No incluyas JSON ni explicaciones fuera del documento.\n- No uses bloques de código, solo texto estructurado con encabezados Markdown.\n","hasOutputParser":true,"options":{"systemMessage":"Actuás como un agente documentador técnico experto en n8n.  \nTu función es leer un listado JSON de workflows y generar documentación consolidada en formato Markdown.\n\nCada workflow incluye estos campos:\n- nombre\n- id\n- descripcion\n- tipos_nodos\n- conexiones\n\nDebés producir **un único texto** que documente todos los workflows de forma profesional, clara y estructurada.  \nNo devuelvas JSON ni objetos estructurados: solo texto en formato Markdown.\n\nEl contenido debe estar organizado por secciones, una por cada workflow, con títulos claros y descripciones técnicas detalladas.\n"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.2,"position":[640,-32],"id":"65386172-72de-4bb5-84cf-240f109a4f9b","name":"Generar Documentación"},{"parameters":{"operation":"toText","sourceProperty":"output","options":{"fileName":"documentacion.md"}},"type":"n8n-nodes-base.convertToFile","typeVersion":1.1,"position":[1520,-32],"id":"6155b7c8-5aec-49fd-9efa-109370428648","name":"Convert to File"},{"parameters":{"operation":"write","fileName":"/home/node/multiagent-mlops/documentacion.md","options":{}},"type":"n8n-nodes-base.readWriteFile","typeVersion":1,"position":[1696,-32],"id":"a4fe6dbe-6b3b-40f2-882c-c663777be899","name":"GuardarDocumentacion"},{"parameters":{"operation":"write","fileName":"/home/node/multiagent-mlops/workflows_backup.json","options":{}},"type":"n8n-nodes-base.readWriteFile","typeVersion":1,"position":[144,-224],"id":"ba0d1d4b-c6bf-4fa4-b935-58c0753677bd","name":"GuardarBackup"},{"parameters":{"command":"cd /home/node/multiagent-mlops\n\n# Copiar los archivos generados por n8n\n# cp /home/node/workflows_backup.json .\n# cp /home/node/documentacion.md .\n\n# Verificar cambios\ngit status\n\n# Hacer pull para evitar conflictos\n# git pull origin main --rebase\n\n# Agregar los nuevos archivos\ngit add documentacion.md workflows_backup.json\n\n# Crear commit con timestamp\ngit commit -m \"auto-doc: actualización de documentación y backup $(date +'%Y-%m-%d %H:%M:%S')\"\n\n# Subir al repositorio remoto\ngit push origin main\n"},"type":"n8n-nodes-base.executeCommand","typeVersion":1,"position":[1888,-224],"id":"1904f96c-9586-4a3e-9b3b-ee8fb6207f9c","name":"Execute Command"},{"parameters":{"content":"# Agente de Documentación y Control de Versión\n### Realiza el backup del proyecto completo, genera la documentación pertinente y actualiza el repositorio de github del mismo.\n","height":112,"width":1414},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-512,-416],"id":"99b7c502-ccd0-4479-9710-931cd49bea5b","name":"Sticky Note1"}],"connections":{"When clicking ‘Execute workflow’":{"main":[[{"node":"Exportar Workflows","type":"main","index":0}]]},"Exportar Workflows":{"main":[[{"node":"Read/Write Files from Disk","type":"main","index":0}]]},"Read/Write Files from Disk":{"main":[[{"node":"Extract from File","type":"main","index":0},{"node":"GuardarBackup","type":"main","index":0}]]},"Resumir Workflows":{"main":[[{"node":"Generar Documentación","type":"main","index":0}]]},"Google Gemini Chat Model":{"ai_languageModel":[[{"node":"Generar Documentación","type":"ai_languageModel","index":0}]]},"Extract from File":{"main":[[{"node":"Resumir Workflows","type":"main","index":0}]]},"Code":{"main":[[{"node":"Corregir Markdown","type":"main","index":0}]]},"Google Gemini Chat Model1":{"ai_languageModel":[[{"node":"Corregir Markdown","type":"ai_languageModel","index":0}]]},"Generar Documentación":{"main":[[{"node":"Code","type":"main","index":0}]]},"Corregir Markdown":{"main":[[{"node":"Convert to File","type":"main","index":0}]]},"Convert to File":{"main":[[{"node":"GuardarDocumentacion","type":"main","index":0}]]},"GuardarDocumentacion":{"main":[[{"node":"Execute Command","type":"main","index":0}]]},"GuardarBackup":{"main":[[]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"d9c6a93d-1a9c-4a85-bbcc-b697c5a36e82","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-10-13T04:28:39.591Z","updatedAt":"2025-10-13T04:28:39.591Z","role":"workflow:owner","workflowId":"PIHgOJZyhJWu7CWX","projectId":"7qi7LuhiXVa97DUN","project":{"createdAt":"2025-08-27T14:52:01.588Z","updatedAt":"2025-08-27T14:53:04.989Z","id":"7qi7LuhiXVa97DUN","name":"EZEQUIEL CORONEL <ezequielcoronel199@gmail.com>","type":"personal","icon":null,"description":null}}]},{"createdAt":"2025-10-27T20:19:07.287Z","updatedAt":"2025-10-27T20:19:07.287Z","id":"BcNqU1uqUwsrJTuO","name":"reporter-agent","active":false,"isArchived":false,"nodes":[],"connections":{},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":"a6457375-3fbd-4d4e-a635-3c5b459e2ab8","triggerCount":0,"tags":[],"shared":[{"createdAt":"2025-10-27T20:19:07.293Z","updatedAt":"2025-10-27T20:19:07.293Z","role":"workflow:owner","workflowId":"BcNqU1uqUwsrJTuO","projectId":"7qi7LuhiXVa97DUN","project":{"createdAt":"2025-08-27T14:52:01.588Z","updatedAt":"2025-08-27T14:53:04.989Z","id":"7qi7LuhiXVa97DUN","name":"EZEQUIEL CORONEL <ezequielcoronel199@gmail.com>","type":"personal","icon":null,"description":null}}]}]